import { OnInit, OnChanges, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';
import { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image.model';
import { NgxGalleryAction } from '../ngx-gallery-action.model';
import { DomSanitizer, SafeStyle } from '@angular/platform-browser';
import { NgxGalleryHelperService } from '../ngx-gallery-helper.service';
import * as i0 from "@angular/core";
export declare class NgxGalleryImageComponent implements OnInit, OnChanges {
    private sanitization;
    private elementRef;
    private helperService;
    images: NgxGalleryOrderedImage[];
    clickable: boolean;
    selectedIndex: number;
    arrows: boolean;
    arrowsAutoHide: boolean;
    swipe: boolean;
    animation: string;
    size: string;
    arrowPrevIcon: string;
    arrowNextIcon: string;
    autoPlay: boolean;
    autoPlayInterval: number;
    autoPlayPauseOnHover: boolean;
    infinityMove: boolean;
    lazyLoading: boolean;
    actions: NgxGalleryAction[];
    descriptions: string[];
    showDescription: boolean;
    bullets: boolean;
    onClick: EventEmitter<any>;
    onActiveChange: EventEmitter<any>;
    canChangeImage: boolean;
    private timer;
    constructor(sanitization: DomSanitizer, elementRef: ElementRef, helperService: NgxGalleryHelperService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    reset(index: number): void;
    getImages(): NgxGalleryOrderedImage[];
    startAutoPlay(): void;
    stopAutoPlay(): void;
    handleClick(event: Event, index: number): void;
    show(index: number): void;
    showNext(): boolean;
    showPrev(): void;
    setChangeTimeout(): void;
    canShowNext(): boolean;
    canShowPrev(): boolean;
    getSafeUrl(image: string): SafeStyle;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxGalleryImageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxGalleryImageComponent, "ngx-gallery-image", never, { "images": { "alias": "images"; "required": false; }; "clickable": { "alias": "clickable"; "required": false; }; "selectedIndex": { "alias": "selectedIndex"; "required": false; }; "arrows": { "alias": "arrows"; "required": false; }; "arrowsAutoHide": { "alias": "arrowsAutoHide"; "required": false; }; "swipe": { "alias": "swipe"; "required": false; }; "animation": { "alias": "animation"; "required": false; }; "size": { "alias": "size"; "required": false; }; "arrowPrevIcon": { "alias": "arrowPrevIcon"; "required": false; }; "arrowNextIcon": { "alias": "arrowNextIcon"; "required": false; }; "autoPlay": { "alias": "autoPlay"; "required": false; }; "autoPlayInterval": { "alias": "autoPlayInterval"; "required": false; }; "autoPlayPauseOnHover": { "alias": "autoPlayPauseOnHover"; "required": false; }; "infinityMove": { "alias": "infinityMove"; "required": false; }; "lazyLoading": { "alias": "lazyLoading"; "required": false; }; "actions": { "alias": "actions"; "required": false; }; "descriptions": { "alias": "descriptions"; "required": false; }; "showDescription": { "alias": "showDescription"; "required": false; }; "bullets": { "alias": "bullets"; "required": false; }; }, { "onClick": "onClick"; "onActiveChange": "onActiveChange"; }, never, never, false, never>;
}
