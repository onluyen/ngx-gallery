import { OnChanges, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';
import { SafeResourceUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';
import { NgxGalleryAction } from '../ngx-gallery-action.model';
import { NgxGalleryHelperService } from '../ngx-gallery-helper.service';
import * as i0 from "@angular/core";
export declare class NgxGalleryThumbnailsComponent implements OnChanges {
    private sanitization;
    private elementRef;
    private helperService;
    thumbnailsLeft: string;
    thumbnailsMarginLeft: string;
    mouseenter: boolean;
    remainingCountValue: number;
    minStopIndex: number;
    images: string[] | SafeResourceUrl[];
    links: string[];
    labels: string[];
    linkTarget: string;
    columns: number;
    rows: number;
    arrows: boolean;
    arrowsAutoHide: boolean;
    margin: number;
    selectedIndex: number;
    clickable: boolean;
    swipe: boolean;
    size: string;
    arrowPrevIcon: string;
    arrowNextIcon: string;
    moveSize: number;
    order: number | any;
    remainingCount: boolean;
    lazyLoading: boolean;
    actions: NgxGalleryAction[];
    onActiveChange: EventEmitter<any>;
    private index;
    constructor(sanitization: DomSanitizer, elementRef: ElementRef, helperService: NgxGalleryHelperService);
    ngOnChanges(changes: SimpleChanges): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    reset(index: number): void;
    getImages(): string[] | SafeResourceUrl[];
    handleClick(event: Event, index: number): void;
    hasLink(index: number): boolean;
    moveRight(): void;
    moveLeft(): void;
    canMoveRight(): boolean;
    canMoveLeft(): boolean;
    getThumbnailLeft(index: number): SafeStyle;
    getThumbnailTop(index: number): SafeStyle;
    getThumbnailWidth(): SafeStyle;
    getThumbnailHeight(): SafeStyle;
    setThumbnailsPosition(): void;
    setDefaultPosition(): void;
    canShowArrows(): boolean;
    validateIndex(): void;
    getSafeUrl(image: string | any): SafeStyle;
    private getThumbnailPosition;
    private getThumbnailDimension;
    private getMaxIndex;
    private getVisibleCount;
    private getSafeStyle;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxGalleryThumbnailsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxGalleryThumbnailsComponent, "ngx-gallery-thumbnails", never, { "images": { "alias": "images"; "required": false; }; "links": { "alias": "links"; "required": false; }; "labels": { "alias": "labels"; "required": false; }; "linkTarget": { "alias": "linkTarget"; "required": false; }; "columns": { "alias": "columns"; "required": false; }; "rows": { "alias": "rows"; "required": false; }; "arrows": { "alias": "arrows"; "required": false; }; "arrowsAutoHide": { "alias": "arrowsAutoHide"; "required": false; }; "margin": { "alias": "margin"; "required": false; }; "selectedIndex": { "alias": "selectedIndex"; "required": false; }; "clickable": { "alias": "clickable"; "required": false; }; "swipe": { "alias": "swipe"; "required": false; }; "size": { "alias": "size"; "required": false; }; "arrowPrevIcon": { "alias": "arrowPrevIcon"; "required": false; }; "arrowNextIcon": { "alias": "arrowNextIcon"; "required": false; }; "moveSize": { "alias": "moveSize"; "required": false; }; "order": { "alias": "order"; "required": false; }; "remainingCount": { "alias": "remainingCount"; "required": false; }; "lazyLoading": { "alias": "lazyLoading"; "required": false; }; "actions": { "alias": "actions"; "required": false; }; }, { "onActiveChange": "onActiveChange"; }, never, never, false, never>;
}
